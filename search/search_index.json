{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the uncomplicated-alert-receiver (UAR) docs!","text":"<p>The GitHub repository can be found on GitHub.</p> <p></p> <p>Get started with the installaton guide.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>UAR is designed so that it very much works \"out of the box\" and with zero configuration. However, it's entirely possible that people might want to tweak things, so there are some configuration options provided.</p>"},{"location":"configuration/#configuration-options","title":"Configuration options","text":""},{"location":"configuration/#alertmanager_host-environment-variable","title":"<code>ALERTMANAGER_HOST</code> Environment Variable","text":"<p>This is the browser URL to get to alertmanager. If you set this, alert links will be clickable. eg: <code>https://am.webapps.example.com</code>.</p>"},{"location":"configuration/#sev_labels_-environment-variables","title":"<code>SEV_LABELS_...</code> Environment Variables","text":"<p>The default severity labels are;</p> <ul> <li><code>SEV_LABELS_1</code>: crit,critical</li> <li><code>SEV_LABELS_2</code>: severe</li> <li><code>SEV_LABELS_3</code>: warning</li> <li><code>SEV_LABELS_4</code>: important</li> <li><code>SEV_LABELS_5</code>: info,information</li> </ul>"},{"location":"install/","title":"Install","text":"<p>UAR is distributed as a Linux container. It listens on port 8080, but like any other container, it can run on any host port, in the example the port is 1337;</p>"},{"location":"install/#docker-compose","title":"Docker Compose","text":"<pre><code>services:\n  uar:\n    container_name: uar\n    image: ghcr.io/jamesread/uncomplicated-alert-receiver:1.2.0\n    ports:\n      - \"6337:8080\"\n</code></pre>"},{"location":"install/#docker-standalone","title":"Docker (standalone)","text":"<pre><code>docker run -p 1337:8080 --name uar ghcr.io/jamesread/uncomplicated-alert-receiver\n</code></pre> <p>Once you have got the container up and running you can access the web interface at <code>http://yourServer:1337/</code> (or whatever port you have chosen).</p>"},{"location":"install/#next-steps","title":"Next steps","text":"<p>The next step is to configure your alertmanager to send alerts to UAR.</p> <ul> <li>Setup Alertmanager</li> </ul>"},{"location":"setup/","title":"Setup Alertmanager","text":""},{"location":"setup/#setup-alertmanager","title":"Setup Alertmanager","text":"<p>You should already have a prometheus running, as well as an alertmanager running, with at least one alert configured.</p> <p>Simply, edit your alertmanager.yml to add UAR as a webhook_config. Here is an example, assuming UAR is running at yourServer:8080;</p> <pre><code>receivers:\n  - name: uar\n    webhook_configs:\n      - url: http://yourServer:8080/alerts\n        send_resolved: false\n\nroute:\n  receiver: uar\n  repeat_interval: 30s\n  group_interval: 30s\n</code></pre> <p>Of course you are free to set the sending intervals to a duration that fits you.</p>"},{"location":"setup/#next-steps","title":"Next steps","text":"<p>UAR is very easy to understand and use, but for the next steps, you can check out the following;</p> <ul> <li>User Guide</li> <li>Configuration</li> </ul>"},{"location":"userguide/","title":"User Guide","text":"<p>When you have UAR installed, you will see a header that looks like this. The header has a couple of components;</p>"},{"location":"userguide/#ui-introduction","title":"UI Introduction","text":"<ul> <li> <p>Next Page Refresh (Progress Bar): By default, UAR will refresh every 30 seconds. The process bar will show the time until the next refresh. It's useful to see this on heads up displays, as they can lock up, or get screen-freeze, and this progress bar proves the page has not frozen.</p> </li> <li> <p>Last result: This shows the number of seconds (or minutes, hours, days) since the last payload was received. This is useful to see if the payload is being received at all, or if your Alertmanager may be having issues. This will also show issues if there were errors talking to the UAR API.</p> </li> </ul>"},{"location":"userguide/#severity-levels","title":"Severity levels","text":"<p>UAR will render alerts according to their severity label, when available. The following severity levels are hard-coded, and ordered from highest to lowest;</p> <ul> <li>Critical: 1</li> <li>Severe: 2</li> <li>Warning: 3</li> <li>Important: 4</li> <li>Info: 5</li> </ul>"}]}